name: Build and upload to PyPI

on:
  push:
    branches:
    - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_sdist:

    if: contains(github.event.head_commit.message, '[ci publish]')

    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    name: Build source distribution ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install ninja-build -y

    - name: Build sdist
      run: pipx run build --sdist

    - name: Validate wheel
      run: |
        pip install twine
        twine check dist/*

    # - name: Validate sdist
    #   run: |
    #     pip install dist/*
    #     pip install numpy pytest
    #     pytest

    - uses: actions/upload-artifact@v4
      with:
        name: signed_heat_method-sdist
        path: dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-14, windows-latest]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.22

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        path: wheelhouse/*.whl
        name: signed_heat_method-wheels-${{ matrix.os }}

  upload_pypi:
    name: Upload release to PyPI

    if: contains(github.event.head_commit.message, '[ci publish]')

    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest

    # steps:
    # - uses: actions/download-artifact@v4
    # - name: Flatten directory structure
    #   run: |
    #     mkdir -p dist/
    #     find . -name '*.whl' -exec mv {} dist/ \;
    #     find . -name '*.tar.gz' -exec mv {} dist/ \;

    # - name: List artifacts
    #   run: ls -R

    # - uses: pypa/gh-action-pypi-publish@v1.12.2
    #   with:
    #     user: __token__
    #     password: ${{ secrets.PYPI_TOKEN }}

    # - name: Release
    #   uses: softprops/action-gh-release@v2
    #   with:
    #     generate_release_notes: true
    #     files: |
    #       ./dist/*.whl
