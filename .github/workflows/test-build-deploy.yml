name: Test and deploy

on:
  pull_request:
  push:
    tags:
    - '*'
    branches:
    - main

# disable concurrent runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-14, macos-13]

    if: "! contains(toJSON(github.event.commits.*.message), '[ci skip]')"
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Boost
      if: runner.os == 'macOS'
      shell: bash
      run: |
        brew upgrade
        brew install boost
    - if: runner.os == 'Linux'
      run: |
        sudo apt-get -y update
        sudo apt-get -y install libboost-dev
    # - if: runner.os == 'Windows'
    #   run: |
    #     git clone --depth=1 --recurse-submodules -j10 https://github.com/boostorg/boost.git
    #     cd boost
    #     bootstrap.bat

    - uses: actions/setup-python@v5
      name: Install Python
      with:
        python-version: '3.9'

    - name: install python packages
      run: python3 -m pip install numpy mypy pytest

    - name: configure
      run: mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Debug .. -DCMAKE_POLICY_VERSION_MINIMUM=3.5 -DSHM_NO_AMGCL=Off

    - name: build
      if: runner.os != 'Windows'
      run: cd build && make

    - if: runner.os == 'Windows'
      run: cd build && cmake --build "." -DSHM_NO_AMGCL=Off

    - name: run test
      run: python3 test/test.py

  # build_wheels:
  #   name: Build wheels on ${{ matrix.os }}
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest, macos-14, macos-13]

  #   steps:
  #   - uses: actions/checkout@v4
  #     with:
  #       submodules: recursive

  #   - name: Run cibuildwheel
  #     uses: pypa/cibuildwheel@v2.22.0

  #   - name: Upload wheels
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: cibw-wheels-${{ matrix.os }}
  #       path: |
  #         ./wheelhouse/*.whl
  #         ./wheelhouse/*.tar.gz
  #       overwrite: true

  # release:
  #   name: Release
  #   if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
  #   needs: [build_wheels]
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: pypi
  #     url: https://pypi.org/p/signed_heat_method
  #   permissions:
  #     id-token: write  # this permission is mandatory for trusted publishing
  #     contents: write  # required to create a release
  #   steps:
  #   - uses: actions/download-artifact@v4
  #   - name: Flatten directory structure
  #     run: |
  #       mkdir -p dist/
  #       find . -name '*.whl' -exec mv {} dist/ \;
  #       find . -name '*.tar.gz' -exec mv {} dist/ \;
  #   - name: Publish package distributions to PyPI
  #     uses: pypa/gh-action-pypi-publish@release/v1
  #   - name: Create GitHub Release
  #     uses: softprops/action-gh-release@v2
  #     with:
  #       generate_release_notes: true
  #       files: |
  #         ./**/*.whl
